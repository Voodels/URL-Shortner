# ============================================================================
# Nginx Configuration for URL Shortener Frontend
# ============================================================================
#
# PURPOSE: Serve React SPA and proxy API requests
#
# FEATURES:
# - SPA routing support (all routes serve index.html)
# - Gzip compression for better performance
# - Security headers
# - Caching strategy
# - API proxy (optional)
#
# ============================================================================

server {
    listen 80;
    server_name _;

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;

    # ========================================================================
    # Security Headers
    # ========================================================================

    # Prevent clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Prevent MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Enable XSS protection
    add_header X-XSS-Protection "1; mode=block" always;

    # Content Security Policy (adjust as needed)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://localhost:8000 http://backend:8000;" always;

    # ========================================================================
    # Compression
    # ========================================================================

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # ========================================================================
    # Static Files Caching
    # ========================================================================

    # Cache static assets aggressively (with hash-based filenames)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # ========================================================================
    # API Proxy (Optional - if not using CORS)
    # ========================================================================

    # Uncomment to proxy API requests to backend
    # location /api {
    #     proxy_pass http://backend:8000;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_cache_bypass $http_upgrade;
    # }

    # ========================================================================
    # Health Check Endpoint
    # ========================================================================

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ========================================================================
    # SPA Routing
    # ========================================================================

    # Try to serve file directly, fallback to index.html for SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ========================================================================
    # Error Pages
    # ========================================================================

    error_page 404 /index.html;
}
